webpackHotUpdate(0,{

/***/ 343:
/***/ function(module, exports, __webpack_require__) {

	eval("/* WEBPACK VAR INJECTION */(function(module) {/* REACT HOT LOADER */ if (true) { (function () { var ReactHotAPI = __webpack_require__(2), RootInstanceProvider = __webpack_require__(10), ReactMount = __webpack_require__(12), React = __webpack_require__(98); module.makeHot = module.hot.data ? module.hot.data.makeHot : ReactHotAPI(function () { return RootInstanceProvider.getRootInstances(ReactMount); }, React); })(); } try { (function () {\n\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.redirectTo = redirectTo;\nexports.checkAuth = checkAuth;\nexports.addChannels = addChannels;\nexports.requestSignUp = requestSignUp;\nexports.signUp = signUp;\nexports.signIn = signIn;\nexports.showModal = showModal;\nexports.hideModal = hideModal;\nexports.receiveChannels = receiveChannels;\nexports.joinChannel = joinChannel;\nexports.addMessagesFromDB = addMessagesFromDB;\n\nvar _ActionTypes = __webpack_require__(344);\n\nvar types = _interopRequireWildcard(_ActionTypes);\n\nvar _reactRouter = __webpack_require__(226);\n\nvar _isomorphicFetch = __webpack_require__(348);\n\nvar _isomorphicFetch2 = _interopRequireDefault(_isomorphicFetch);\n\nvar _reactCookie = __webpack_require__(341);\n\nvar _reactCookie2 = _interopRequireDefault(_reactCookie);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction receiveUser(username) {\n    var user = {\n        name: username,\n        isAuthenticated: true\n    };\n    return {\n        type: types.AUTH_SUCCESS,\n        user: user\n    };\n}\n\nfunction redirectTo(url) {\n    return function (dispatch) {\n        dispatch({\n            type: types.REDIRECT,\n            url: url\n        });\n    };\n}\n\nfunction checkAuth() {\n    return function (dispatch) {\n        var username = _reactCookie2.default.load('username');\n        if (!username) {\n            _reactRouter.browserHistory.push('/signup');\n        } else {\n            dispatch(receiveUser(username));\n        }\n    };\n}\n\nfunction addChannels(list) {\n    return function (dispatch) {\n        dispatch({\n            type: types.ADD_CHANNELS,\n            list: list\n        });\n    };\n}\n\nfunction requestSignUp() {\n    return {\n        type: types.AUTH_SIGNUP\n    };\n}\n\nfunction signUp(user) {\n\n    return function (dispatch) {\n\n        dispatch(requestSignUp());\n        return (0, _isomorphicFetch2.default)('/api/sign_up', {\n            method: 'post',\n            //заголовки, чтобы возможно было отправить json через body/\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        }).then(function (response) {\n            if (response.ok) {\n                //сохраняем имя пользователя в cokie\n                _reactCookie2.default.save('username', user.userLogin);\n                dispatch(receiveUser(user.userLogin));\n                _reactRouter.browserHistory.push('/chat');\n            }\n        }).catch(function (error) {\n            throw error;\n        });\n    };\n}\n\nfunction signIn(user) {\n\n    return function (dispatch) {\n\n        return (0, _isomorphicFetch2.default)('/api/sign_in', {\n            method: 'post',\n            headers: {\n                'Accept': 'application/json',\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(user)\n        }).then(function (response) {\n            if (response.ok) {\n                _reactCookie2.default.save('username', user.userLogin);\n                dispatch(receiveUser(user.userLogin));\n                _reactRouter.browserHistory.push('/chat');\n            }\n            if (response.statusText === 'Unauthorized') {\n                dispatch(showModal('Wrong login or password'));\n            }\n        }).catch(function (error) {\n            throw error;\n        });\n    };\n}\n\nfunction showModal(text) {\n\n    return function (dispatch) {\n        dispatch({\n            type: types.SHOW_MODAL,\n            text: text\n        });\n    };\n}\n\nfunction hideModal() {\n\n    return function (dispatch) {\n        dispatch({\n            type: types.HIDE_MODAL\n        });\n    };\n}\n\nfunction receiveChannels(list) {\n    return function (dispatch) {\n        dispatch({\n            type: types.ADD_CHANNELS,\n            list: list\n        });\n    };\n}\n\nfunction joinChannel(nextChannel) {\n    return function (dispatch) {\n        dispatch({\n            type: types.CHANGE_ACTIVE_CHANNEL,\n            nextChannel: nextChannel\n        });\n    };\n}\n\nfunction addMessagesFromDB(channel, messages) {\n    return function (dispatch) {\n        dispatch({\n            type: types.ADD_MSGS_FROM_DB,\n            channel: channel,\n            messages: messages\n        });\n    };\n}\n\n/* REACT HOT LOADER */ }).call(this); } finally { if (true) { (function () { var foundReactClasses = module.hot.data && module.hot.data.foundReactClasses || false; if (module.exports && module.makeHot) { var makeExportsHot = __webpack_require__(345); if (makeExportsHot(module, __webpack_require__(98))) { foundReactClasses = true; } var shouldAcceptModule = true && foundReactClasses; if (shouldAcceptModule) { module.hot.accept(function (err) { if (err) { console.error(\"Cannot apply hot update to \" + \"index.js\" + \": \" + err.message); } }); } } module.hot.dispose(function (data) { data.makeHot = module.makeHot; data.foundReactClasses = foundReactClasses; }); })(); } }\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1)(module)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ }

})